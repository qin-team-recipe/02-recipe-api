basePath: /api/v1
definitions:
  domain.ChefFollowsForGet:
    properties:
      chef:
        $ref: '#/definitions/domain.ChefsForGet'
      chef_id:
        type: integer
      id:
        type: integer
      user_id:
        type: integer
    type: object
  domain.ChefsForGet:
    properties:
      description:
        type: string
      display_name:
        type: string
      id:
        type: integer
      screen_name:
        type: string
    type: object
  domain.RecipeFavoritesForGet:
    properties:
      id:
        type: integer
      recipe:
        $ref: '#/definitions/domain.RecipesForGet'
      recipe_id:
        type: integer
      user_id:
        type: integer
    type: object
  domain.RecipesForGet:
    properties:
      description:
        type: string
      id:
        type: integer
      is_draft:
        type: boolean
      title:
        type: string
    type: object
  domain.Users:
    properties:
      display_name:
        type: string
      id:
        type: integer
      screen_name:
        type: string
    type: object
  usecase.ResultStatus:
    properties:
      code:
        type: integer
      error: {}
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a Team02's API Docs at Qin.
  termsOfService: http://swagger.io/terms/
  title: Team02's API
  version: "1.0"
paths:
  /chefFollows:
    get:
      consumes:
      - application/x-json-stream
      description: This API return the list of following chefs by user.
      parameters:
      - description: User ID
        in: query
        name: user_id
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.ChefFollowsForGet'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/usecase.ResultStatus'
      summary: Get following chef list.
      tags:
      - chefFollows
  /chefs:
    get:
      consumes:
      - application/x-json-stream
      description: This API return all chef list.
      parameters:
      - description: Query
        in: query
        name: q
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.ChefsForGet'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/usecase.ResultStatus'
      summary: Get chef list.
      tags:
      - chef
  /chefs/{screenName}:
    get:
      consumes:
      - application/x-json-stream
      description: This API return unique chef by screenName.
      parameters:
      - description: screenName
        in: path
        name: screenName
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.ChefsForGet'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/usecase.ResultStatus'
      summary: Get unique chef.
      tags:
      - chef
  /recipeFavorites:
    get:
      consumes:
      - application/x-json-stream
      description: This API return list of recipes of favorite.
      parameters:
      - description: User ID
        in: query
        name: user_id
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.RecipeFavoritesForGet'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/usecase.ResultStatus'
      summary: Get list of recipes of favorite.
      tags:
      - recipeFavorites
  /recipes:
    get:
      consumes:
      - application/x-json-stream
      description: This API return all recipe list.
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.RecipesForGet'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/usecase.ResultStatus'
      summary: Get recipe list.
      tags:
      - recipes
  /users/{id}:
    get:
      consumes:
      - application/x-json-stream
      description: get user info
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Users'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/usecase.ResultStatus'
      summary: product users
      tags:
      - users
swagger: "2.0"
