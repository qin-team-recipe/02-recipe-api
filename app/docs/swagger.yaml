basePath: /api/v1
definitions:
  controllers.H:
    properties:
      data: {}
      message:
        type: string
    type: object
  domain.ChefFollows:
    properties:
      chef_id:
        type: integer
      created_at:
        type: integer
      id:
        type: integer
      user_id:
        type: integer
    type: object
  domain.ChefFollowsForGet:
    properties:
      chef:
        $ref: '#/definitions/domain.ChefsForGet'
      chef_id:
        type: integer
      id:
        type: integer
      user_id:
        type: integer
    type: object
  domain.ChefLinksForGet:
    properties:
      chef_id:
        type: integer
      id:
        type: integer
      service_name:
        type: string
      url:
        type: string
    type: object
  domain.ChefRecipesForGet:
    properties:
      chef_id:
        type: integer
      id:
        type: integer
      recipe:
        $ref: '#/definitions/domain.RecipesForGet'
      recipe_id:
        type: integer
    type: object
  domain.ChefsForGet:
    properties:
      chef_links:
        items:
          $ref: '#/definitions/domain.ChefLinksForGet'
        type: array
      description:
        type: string
      display_name:
        type: string
      follows_count:
        type: integer
      id:
        type: integer
      is_following:
        type: boolean
      recipes_count:
        type: integer
      screen_name:
        type: string
    type: object
  domain.RecipeFavorites:
    properties:
      created_at:
        type: integer
      id:
        type: integer
      recipe_id:
        type: integer
      user_id:
        type: integer
    type: object
  domain.RecipeFavoritesForGet:
    properties:
      id:
        type: integer
      recipe:
        $ref: '#/definitions/domain.RecipesForGet'
      recipe_id:
        type: integer
      user_id:
        type: integer
    type: object
  domain.RecipeIngredientsForGet:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      recipe_id:
        type: integer
    type: object
  domain.RecipeLinksForGet:
    properties:
      id:
        type: integer
      recipe_id:
        type: integer
      url:
        type: string
    type: object
  domain.RecipeStepsForGet:
    properties:
      description:
        type: string
      id:
        type: integer
      recipe_id:
        type: integer
      step_number:
        type: integer
      title:
        type: string
    type: object
  domain.RecipesForGet:
    properties:
      chef:
        allOf:
        - $ref: '#/definitions/domain.ChefsForGet'
        description: この値はどちらかが入る
      description:
        type: string
      favorites_count:
        type: integer
      id:
        type: integer
      is_draft:
        type: boolean
      published_status:
        type: string
      servings:
        type: integer
      title:
        type: string
      user:
        $ref: '#/definitions/domain.UsersForGet'
      watch_id:
        type: string
    type: object
  domain.ShoppingItemsForGet:
    properties:
      id:
        type: integer
      is_done:
        type: boolean
      recipe_ingredient:
        $ref: '#/definitions/domain.RecipeIngredientsForGet'
      recipe_ingredient_id:
        type: integer
      user_id:
        type: integer
    type: object
  domain.SocialUserAccount:
    properties:
      display_name:
        type: string
      email:
        type: string
      service_name:
        type: string
      service_user_id:
        type: string
    type: object
  domain.UserRecipesForGet:
    properties:
      id:
        type: integer
      recipe:
        $ref: '#/definitions/domain.RecipesForGet'
      recipe_id:
        type: integer
      user_id:
        type: integer
    type: object
  domain.UserShoppingItemsForGet:
    properties:
      description:
        type: string
      id:
        type: integer
      is_done:
        type: boolean
      title:
        type: string
      user_id:
        type: integer
    required:
    - title
    type: object
  domain.Users:
    properties:
      created_at:
        type: integer
      deleted_at:
        type: integer
      display_name:
        type: string
      email:
        type: string
      id:
        type: integer
      screen_name:
        type: string
      updated_at:
        type: integer
    type: object
  domain.UsersForGet:
    properties:
      display_name:
        type: string
      email:
        type: string
      id:
        type: integer
      screen_name:
        type: string
    type: object
  product.AuthenticateResponse:
    properties:
      login_url:
        type: string
    type: object
  product.ChefList:
    properties:
      lists:
        items:
          $ref: '#/definitions/domain.ChefsForGet'
        type: array
      page_info:
        $ref: '#/definitions/usecase.PageInfo'
    type: object
  product.ChefRecipeResponse:
    properties:
      lists:
        items:
          $ref: '#/definitions/domain.ChefRecipesForGet'
        type: array
      page_info:
        $ref: '#/definitions/usecase.PageInfo'
    type: object
  product.PublishStatusRequest:
    properties:
      recipe_id:
        type: integer
      status:
        type: string
    type: object
  product.UserResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/domain.UsersForGet'
    type: object
  usecase.PageInfo:
    properties:
      end_cursor:
        type: string
      has_next_page:
        type: boolean
      has_previous_page:
        type: boolean
      length:
        type: integer
      start_cursor:
        type: string
    type: object
  usecase.ResultStatus:
    properties:
      code:
        type: integer
      error: {}
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a Team02's API Docs at Qin.
  termsOfService: http://swagger.io/terms/
  title: Team02's API
  version: "1.0"
paths:
  /authenticates/google:
    get:
      description: Googleアカウントログイン認証に必要なURLの発行.
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/product.AuthenticateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: GoogleアカウントログインURLの取得.
      tags:
      - authenticates
  /authenticates/google/userinfo:
    get:
      description: Googleアカウントログイン認証に成功すればアカウント情報を取得する.
      parameters:
      - description: Googleから返却される署名（code）
        in: query
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/domain.SocialUserAccount'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: Googleアカウント情報の取得.
      tags:
      - authenticates
  /chefFollows:
    delete:
      consumes:
      - application/json
      description: シェフをフォロー解除する際のリクエスト
      parameters:
      - description: user_id, chef_id は必須
        in: body
        name: chefFollow
        required: true
        schema:
          $ref: '#/definitions/domain.ChefFollows'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: ユーザーがシェフをフォロー解除
      tags:
      - chefFollows
    get:
      consumes:
      - application/x-json-stream
      description: ユーザーがフォロー中のシェフの一覧を取得する
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.ChefFollowsForGet'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: フォロー中のシェフ一覧取得
      tags:
      - chefFollows
    post:
      consumes:
      - application/json
      description: シェフをフォロー登録する際のリクエスト
      parameters:
      - description: user_id, chef_id は必須
        in: body
        name: chefFollow
        required: true
        schema:
          $ref: '#/definitions/domain.ChefFollows'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/domain.ChefFollowsForGet'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: ユーザーがシェフをフォロー登録
      tags:
      - chefFollows
  /chefRecipes:
    get:
      consumes:
      - application/x-json-stream
      description: シェフのレシピのリストを取得する
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/product.ChefRecipeResponse'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/usecase.ResultStatus'
      summary: シェフのレシピのリストを取得.
      tags:
      - chefRecipes
  /chefs:
    get:
      consumes:
      - application/x-json-stream
      description: シェフ一覧を取得する
      parameters:
      - description: 任意のWHERE文
        in: query
        name: q
        type: string
      - description: 現在取得中の末尾カーソル
        in: query
        name: cursor
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/product.ChefList'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: シェフ一覧取得
      tags:
      - chef
  /chefs/{screenName}:
    get:
      consumes:
      - application/x-json-stream
      description: screenNameで指定されたシェフの情報を取得する
      parameters:
      - description: screenName
        in: path
        name: screenName
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/domain.ChefsForGet'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: シェフ取得
      tags:
      - chef
  /login:
    get:
      description: ユーザーログインのエンドポイント
      parameters:
      - description: GoogleアカウントのユーザーID
        in: query
        name: service_user_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/product.UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: ユーザーログイン
      tags:
      - me
  /me:
    delete:
      description: ユーザーアカウントの削除のエンドポイント
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: ユーザーアカウントの削除
      tags:
      - me
    get:
      description: ユーザー情報の取得のエンドポイント
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/domain.Users'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: ユーザー情報の取得
      tags:
      - me
    patch:
      description: ユーザー情報の変更のエンドポイント
      parameters:
      - description: 変更したユーザー情報
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.Users'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/domain.UsersForGet'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: ユーザー情報の変更
      tags:
      - me
  /publishStatuses:
    patch:
      description: レシピの公開状態を更新する
      parameters:
      - description: レシピのIDとステータスを含む
        in: body
        name: publish_status_reqest
        required: true
        schema:
          $ref: '#/definitions/product.PublishStatusRequest'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: レシピの公開状態の更新
      tags:
      - recipes
  /recipeFavorites:
    delete:
      consumes:
      - application/json
      description: レシピをお気に入り解除する際のリクエスト
      parameters:
      - description: user_id, recipe_id は必須
        in: body
        name: recipeFavorite
        required: true
        schema:
          $ref: '#/definitions/domain.RecipeFavorites'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: ユーザーがレシピをお気に入り解除
      tags:
      - recipeFavorites
    get:
      consumes:
      - application/x-json-stream
      description: ユーザーのお気に入りレシピ一覧を取得する際のリクエスト
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.RecipeFavoritesForGet'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: ユーザーのお気に入りレシピ一覧取得
      tags:
      - recipeFavorites
    post:
      consumes:
      - application/json
      description: レシピをお気に入り登録する際のリクエスト
      parameters:
      - description: user_id, recipe_id は必須
        in: body
        name: recipeFavorite
        required: true
        schema:
          $ref: '#/definitions/domain.RecipeFavorites'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/domain.RecipeFavoritesForGet'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: ユーザーがレシピをお気に入り登録
      tags:
      - recipeFavorites
  /recipeIngredients:
    get:
      consumes:
      - application/x-json-stream
      description: レシピの材料一覧を取得するエンドポイント
      parameters:
      - description: Recipe ID
        in: query
        name: recipe_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.RecipeIngredientsForGet'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: レシピの材料一覧を取得
      tags:
      - recipeIngredients
    post:
      consumes:
      - application/x-json-stream
      description: レシピ材料を登録して結果を返却する
      parameters:
      - description: RecipeID
        in: formData
        name: recipe_id
        required: true
        type: integer
      - description: 材料名
        in: formData
        name: name
        required: true
        type: string
      - description: 材料説明
        in: formData
        name: description
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/domain.RecipeIngredientsForGet'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: レシピ材料登録
      tags:
      - recipeIngredients
  /recipeLinks:
    post:
      consumes:
      - application/x-json-stream
      description: レシピURLを登録し、結果を返却する
      parameters:
      - description: Recipe ID
        in: formData
        name: recipe_id
        required: true
        type: integer
      - description: URL
        in: formData
        name: url
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/domain.RecipeLinksForGet'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: レシピURLを登録する
      tags:
      - recipeLinks
  /recipeSteps:
    get:
      consumes:
      - application/x-json-stream
      description: レシピの手順一覧を取得するエンドポイント
      parameters:
      - description: Recipe ID
        in: query
        name: recipe_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.RecipeStepsForGet'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: レシピの手順一覧を取得
      tags:
      - recipeSteps
    post:
      consumes:
      - application/x-json-stream
      description: レシピ手順を登録し、結果を返却する
      parameters:
      - description: Recipe ID
        in: formData
        name: recipe_id
        required: true
        type: integer
      - description: タイトル
        in: formData
        name: title
        required: true
        type: string
      - description: 説明
        in: formData
        name: description
        type: string
      - description: ステップNo
        in: formData
        name: step_number
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/domain.RecipeStepsForGet'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: レシピ手順登録
      tags:
      - recipeSteps
  /recipes:
    get:
      description: レシピリストを取得する
      parameters:
      - description: type=chefFollowとすることでフォローしているシェフの情報を取得する
        in: query
        name: type
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.RecipesForGet'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: レシピリストの取得
      tags:
      - recipes
  /recipes/{id}:
    get:
      description: レシピ情報を取得する
      parameters:
      - description: レシピのWatchID
        in: path
        name: watch_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/domain.RecipesForGet'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: レシピ情報の取得
      tags:
      - recipes
  /recommend/chefs:
    get:
      consumes:
      - application/x-json-stream
      description: 直近3日間の獲得フォロワー数の上位10人を取得
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.ChefsForGet'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: 注目のシェフ
      tags:
      - recommend
  /recommend/recipes:
    get:
      consumes:
      - application/x-json-stream
      description: 過去3日間でお気に入り登録の多かったレシピを取得
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.RecipesForGet'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: 話題のレシピ
      tags:
      - recommend
  /register:
    post:
      description: ユーザー新規登録のエンドポイント
      parameters:
      - description: 登録するGoogleアカウント
        in: body
        name: social_user_account
        required: true
        schema:
          $ref: '#/definitions/domain.SocialUserAccount'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/product.UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: ユーザー新規登録
      tags:
      - me
  /shoppingItems:
    get:
      consumes:
      - application/x-json-stream
      description: 指定されたレシピIDに紐づく買い物リストを取得する
      parameters:
      - description: Recipe ID
        in: query
        name: recipe_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.ShoppingItemsForGet'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: 買い物リスト取得
      tags:
      - shoppingItems
    post:
      consumes:
      - application/x-json-stream
      description: 買い物リストアイテムを登録し、結果を返却する
      parameters:
      - description: User ID
        in: formData
        name: user_id
        required: true
        type: integer
      - description: レシピ材料ID
        in: formData
        name: recipe_ingredient_id
        required: true
        type: integer
      - description: チェック状態
        in: formData
        name: id_done
        required: true
        type: boolean
      responses:
        "202":
          description: Accepted
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/domain.ShoppingItemsForGet'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: 買い物リストアイテム登録
      tags:
      - shoppingItems
  /shoppingItems/{id}:
    delete:
      consumes:
      - application/x-json-stream
      description: 買い物リストアイテムを削除し、結果を返却する
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: 買い物リストアイテム削除
      tags:
      - shoppingItems
    patch:
      consumes:
      - application/x-json-stream
      description: 買い物リストアイテムのチェック状態を更新し、結果を返却する
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: User ID
        in: formData
        name: user_id
        required: true
        type: integer
      - description: Recipe Ingredient ID
        in: formData
        name: recipe_ingredient_id
        required: true
        type: integer
      - description: IsDone
        in: formData
        name: id_done
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/domain.ShoppingItemsForGet'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: 買い物リストアイテム更新
      tags:
      - shoppingItems
  /userRecipes:
    post:
      consumes:
      - application/x-json-stream
      description: 一般シェフのレシピを登録し、結果を返却する
      parameters:
      - description: タイトル
        in: formData
        name: title
        required: true
        type: string
      - description: 説明
        in: formData
        name: description
        type: string
      - description: 対象人数
        in: formData
        name: servings
        required: true
        type: integer
      - description: 下書きフラグ
        in: formData
        name: is_draft
        type: boolean
      responses:
        "202":
          description: Accepted
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/domain.UserRecipesForGet'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: 一般シェフレシピ登録
      tags:
      - userRecipes
  /userShoppingItems:
    get:
      consumes:
      - application/x-json-stream
      description: ユーザーのIDに紐づく買い物リストを取得する
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.UserShoppingItemsForGet'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: 買い物リストアイテム一覧取得
      tags:
      - userShoppingItems
    post:
      consumes:
      - application/x-json-stream
      description: 買い物リストにアイテムを登録し、結果を返却する
      parameters:
      - description: User ID
        in: formData
        name: user_id
        required: true
        type: integer
      - description: タイトル
        in: formData
        name: title
        required: true
        type: string
      - description: 説明
        in: formData
        name: description
        type: string
      - description: チェック状態
        in: formData
        name: is_done
        type: boolean
      responses:
        "202":
          description: Accepted
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/domain.UserShoppingItemsForGet'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: 買い物リストアイテム登録
      tags:
      - userShoppingItems
  /userShoppingItems/{id}:
    delete:
      consumes:
      - application/x-json-stream
      description: 買い物リストアイテムを削除する
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: 買い物リストアイテム削除
      tags:
      - userShoppingItems
    patch:
      consumes:
      - application/x-json-stream
      description: 買い物リストアイテムの情報を更新し、結果を返却する
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: User ID
        in: formData
        name: user_id
        required: true
        type: integer
      - description: タイトル
        in: formData
        name: title
        required: true
        type: string
      - description: 説明
        in: formData
        name: description
        type: string
      - description: チェック状態
        in: formData
        name: is_done
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/domain.UserShoppingItemsForGet'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: 買い物リストアイテム更新
      tags:
      - userShoppingItems
  /users/{id}:
    get:
      consumes:
      - application/x-json-stream
      description: test taro を返却
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/domain.Users'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/controllers.H'
            - properties:
                data:
                  $ref: '#/definitions/usecase.ResultStatus'
              type: object
      summary: テストAPI
      tags:
      - users
swagger: "2.0"
